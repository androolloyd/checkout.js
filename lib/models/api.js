// Generated by CoffeeScript 1.9.2
var API;

module.exports = API = (function() {
  function API(key, store, cb, url) {
    this.key = key;
    this.store = store != null ? store : '';
    this.cb = cb != null ? cb : (function(order) {});
    this.url = url != null ? url : 'https://api.crowdstart.com';
  }

  API.prototype.getItems = function(order, success, fail) {
    var failed, isDone, isFailed, itemRef, itemRefs, j, len, ref, results, waitCount;
    itemRefs = order.itemRefs;
    if ((itemRefs != null) && itemRefs.length > 0) {
      waitCount = order.itemRefs.length;
      failed = false;
      isDone = function(product) {
        var i;
        i = order.items.length;
        order.items.push({
          productId: product.id,
          productSlug: product.slug,
          productName: product.name,
          quantity: itemRefs[i].quantity,
          price: product.price,
          shipping: product.shipping
        });
        if (!failed && waitCount === order.items.length) {
          return success(order);
        }
      };
      isFailed = function() {
        failed = true;
        if (fail != null) {
          return fail.apply(this, arguments);
        }
      };
      ref = order.itemRefs;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        itemRef = ref[j];
        results.push($.ajax({
          url: this.store === '' ? this.url + '/product/' + itemRef.productId : this.url + '/#{ @store }/product/' + itemRef.productId,
          type: 'GET',
          headers: {
            Authorization: this.key
          },
          contentType: 'application/json; charset=utf-8',
          dataType: 'json',
          success: isDone,
          error: isFailed
        }));
      }
      return results;
    } else {
      order.items = [];
      return success(order);
    }
  };

  API.prototype.getCouponCode = function(code, success, fail) {
    return $.ajax({
      url: this.url + '/coupon/' + code,
      type: 'GET',
      headers: {
        Authorization: this.key
      },
      contentType: 'application/json; charset=utf-8',
      dataType: 'json',
      success: success,
      error: fail
    });
  };

  API.prototype.charge = function(model, success, fail) {
    return $.ajax({
      url: this.store === '' ? this.url + '/charge' : this.url + '/#{ @store }/charge',
      type: 'POST',
      headers: {
        Authorization: this.key
      },
      contentType: 'application/json; charset=utf-8',
      data: JSON.stringify(model),
      dataType: 'json',
      success: (function(_this) {
        return function(order) {
          success(order);
          return _this.cb(order);
        };
      })(this),
      error: fail
    });
  };

  return API;

})();

//# sourceMappingURL=api.js.map
